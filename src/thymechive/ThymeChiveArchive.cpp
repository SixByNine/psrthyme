//  Copyright (C) 2014 Michael J. Keith, University of Manchester
#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include <inttypes.h>

// include header generated by makeheaders
#include "ThymeChiveArchive.hpp"


#if INTERFACE
#include <psrthyme/psrthyme.hpp>
#include <Pulsar/Archive.h>
#include <boost/shared_ptr.hpp>
class ThymeChiveArchive : public PsrthymeArchive {
   private:
	  boost::shared_ptr<Pulsar::Archive> chive_archive;
   public:
	  typedef boost::shared_ptr<ThymeChiveArchive> Ptr;
	  int64_t get_MJD();
	  double  getStartTime(){}; // from MJD
	  uint64_t getNsub(){};
	  uint64_t getNbins(){};
	  uint64_t getNchans(){};
	  uint64_t getNpol(){};
	  PsrthymeTelescope::Ptr getTelescope(){};
	  PsrthymeProfile::Ptr getProfile(uint64_t isubint, uint64_t ichan, uint64_t ipol){};

	  ThymeChiveArchive(std::string fname);

};
#endif

ThymeChiveArchive::ThymeChiveArchive(std::string fname){
   Pulsar::Archive::verbose=1;
   this->chive_archive = boost::shared_ptr<Pulsar::Archive>(Pulsar::Archive::load(fname));
}

int64_t ThymeChiveArchive::get_MJD(){
   return this->chive_archive->start_time().intday();
}
