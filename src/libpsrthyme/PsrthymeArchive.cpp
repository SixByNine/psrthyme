//  Copyright (C) 2014 Michael J. Keith, University of Manchester
#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include <inttypes.h>

// include header generated by makeheaders
#include "PsrthymeArchive.hpp"


#if INTERFACE
#include <Pulsar/Archive.h>
#include <boost/shared_ptr.hpp>
class PsrthymeArchive {
   public:
	  typedef boost::shared_ptr<Pulsar::Archive> Chive;
	  typedef boost::shared_ptr<PsrthymeArchive> Ptr;
   private:
	  Chive chive;
   public:
	  Chive getChive(){
		 return this->chive;
	  }
	  MJD getStartTime(){
		 return this->chive->start_time();
	  }
	  uint64_t getNsub(){
		 return this->chive->get_nsubint();
	  };
	  uint64_t getNbins(){
		 return this->chive->get_nbin();
	  };
	  uint64_t getNchans(){
		 return this->chive->get_nchan();
	  };
	  uint64_t getNpol(){
		 return this->chive->get_npol();
	  };
	  PsrthymeTelescope::Ptr getTelescope(){
		 return PsrthymeTelescope::getTelescopeFromId(this->chive->get_telescope());
	  };
	  PsrthymeProfile::Ptr getProfile(uint64_t isubint, uint64_t ichan, uint64_t ipol){
		 PsrthymeProfile::Ptr ret = PsrthymeProfile::Ptr(
			   new PsrthymeProfile(this->chive->get_Integration(isubint),ipol,ichan,this->getTelescope())
				  );
		 return ret;
	  };

	  PsrthymeArchive(std::string fname);

};
#endif

PsrthymeArchive::PsrthymeArchive(std::string fname){
   this->chive = PsrthymeArchive::Chive(Pulsar::Archive::load(fname));
}

